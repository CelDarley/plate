#!/usr/bin/env python3
"""
Script de inicializa√ß√£o do Sistema de Scraping Placa FIPE
"""

import os
import sys
import subprocess
from pathlib import Path

def check_python_version():
    """Verifica se a vers√£o do Python √© compat√≠vel"""
    if sys.version_info < (3, 8):
        print("‚ùå Erro: Python 3.8+ √© necess√°rio")
        print(f"Vers√£o atual: {sys.version}")
        return False
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor} detectado")
    return True

def check_dependencies():
    """Verifica se as depend√™ncias est√£o instaladas"""
    try:
        import flask
        import requests
        import bs4
        import selenium
        print("‚úÖ Todas as depend√™ncias est√£o instaladas")
        return True
    except ImportError as e:
        print(f"‚ùå Depend√™ncia n√£o encontrada: {e}")
        print("Execute: pip install -r requirements.txt")
        return False

def create_directories():
    """Cria diret√≥rios necess√°rios"""
    Path("templates").mkdir(exist_ok=True)
    print("‚úÖ Diret√≥rios criados/verificados")

def setup_database():
    """Configura o banco de dados"""
    try:
        from app import app, db
        with app.app_context():
            db.create_all()
        print("‚úÖ Banco de dados configurado")
        return True
    except Exception as e:
        print(f"‚ùå Erro ao configurar banco: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üöÄ Iniciando Sistema de Scraping Placa FIPE")
    print("=" * 50)
    
    # Verifica√ß√µes
    if not check_python_version():
        sys.exit(1)
    
    if not check_dependencies():
        print("\nüí° Para instalar as depend√™ncias:")
        print("   pip install -r requirements.txt")
        sys.exit(1)
    
    create_directories()
    
    if not setup_database():
        print("‚ö†Ô∏è  Continuando sem configura√ß√£o do banco...")
    
    print("\nüéØ Sistema pronto para execu√ß√£o!")
    print("\nüìã Pr√≥ximos passos:")
    print("   1. Acesse: http://localhost:5000")
    print("   2. V√° para a p√°gina de Gest√£o")
    print("   3. Insira as placas e inicie o scraping")
    
    print("\nüöÄ Iniciando servidor...")
    print("=" * 50)
    
    # Inicia o servidor Flask
    try:
        from app import app
        app.run(debug=True, host='0.0.0.0', port=5000)
    except KeyboardInterrupt:
        print("\n\nüëã Servidor parado pelo usu√°rio")
    except Exception as e:
        print(f"\n‚ùå Erro ao iniciar servidor: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
